# Default values for cra.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

environment: uat

replicaCount: '1.0'
replicaCountCanary: '1.0'
replicaCountEnforced: false

namespace: default

sidecarRaw: ""
vault:
  vaultEnabled: false
  specAnnotations: {}

image:
  pullPolicy: IfNotPresent
  imageTag: ""
  imageRepo: "asia.gcr.io/tikivn"

fullnameOverride: ""

ingress:
# Enable creating Kubernetes Ingress resource and Service resource, default true
# enabled: true

# Define ingress rules, only support HTTP. If no host is declared, Ingress is not created either
# Each HTTP rule contains the following information:
#   An optional host
#   A list of paths
# hosts:
#   - host: example.tiki.services
#     paths:
#       - path: "/"
#         port: 80

# Kubernetes service type, default to ClusterIP
# If you want to create only Service, do not create Ingress, set ingress.enabled to false
# and ingress.service.enabled to true
# service:
#   type: ClusterIP
#   enabled: true

#  annotations:
#    kubernetes.io/ingress.class: nginx

# Canary configuration
# Default is diabled
# If you use canaryBy weight, you must configure canaryWeight either
# If you use canaryBy cookie, you must configure canaryCookie either
# canary:
#   enabled: false
#   canaryBy: header/cookie/weight
#   canaryCookie: "TIKI_CANARY"

#  tls: []
#  - secretName: chart-example-tls
#    hosts:
#      - chart-example.local

#design like the Ingress helm chart
ingressGRPC:
  annotations:
    kubernetes.io/ingress.class: nginx
  tls: []

readinessProbe: {}
livenessProbe: {}

lifecycle: {}

# Horizontal Pod Autoscaler automatically scales the number of Pods based on observed CPU/Memory utilization
# Possible value for resource.name is memory, cpu
# Change minReplicas, maxReplicas and averageUtilization based on your application
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 70

# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
resources: {}
  # limits:
  #  cpu: 100m
#  memory: 128Mi
# requests:
#  cpu: 100m
#  memory: 128Mi

nodeSelector: {}
# tiki.services/dedicated: xxx
# nodeSelectorDedicated: "default"
# nodeSelectorPreemptible: "mixed" # "all" "disabled"

tolerations: []
# - key: "1241241212"
#   operator: "Equal"
#   value: "preemptible"
#   effect: "NoSchedule"

# You can constrain a Pod to only be able to run on particular Node(s), or to prefer to run on particular nodes.
affinity: {}

  # Node affinity allows you to constrain which nodes your pod is eligible to be scheduled on, based on labels on the node.
  # nodeAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     nodeSelectorTerms:
  #     - matchExpressions:
  #       - key: kubernetes.io/e2e-az-name
  #         operator: In
  #         values:
  #         - e2e-az1
  #         - e2e-az2
  #   preferredDuringSchedulingIgnoredDuringExecution:
  #   - weight: 1
  #     preference:
  #       matchExpressions:
  #       - key: another-node-label-key
  #         operator: In
  #         values:
  #         - another-node-label-value

  # Inter-pod affinity and anti-affinity allow you to constrain which nodes your pod is eligible to be 
  # scheduled based on labels on pods that are already running on the node rather than based on labels on nodes.
  # podAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #   - labelSelector:
  #       matchExpressions:
  #       - key: security
  #         operator: In
  #         values:
  #         - S1
  #     topologyKey: topology.kubernetes.io/zone
  # podAntiAffinity:
  #   preferredDuringSchedulingIgnoredDuringExecution:
  #   - weight: 100
  #     podAffinityTerm:
  #       labelSelector:
  #         matchExpressions:
  #         - key: security
#           operator: In
#           values:
#           - S2
#       topologyKey: topology.kubernetes.io/zone

# Specifies the strategy used to replace old Pods by new ones.
# strategy type can be "Recreate" or "RollingUpdate". "RollingUpdate" is the default value.
# Recreate: All existing Pods are killed before new ones are created
# RollingUpdate: Pods are replaced one by one. 
#  You can specify maxUnavailable and maxSurge to control the rolling update process.
strategy: {}
# rollingUpdate:
#   maxSurge: 1
#   maxUnavailable: 0
# type: RollingUpdate

specAnnotations: {}

# serviceAccount: default

#Add environment via secret or configmap.
# envFrom:
#  - secretRef:
#      name: apple-cat-env
#      optional: false
#  - configMapRef:
#      name: apple-cat-env
#      optional: false

replicaSet:
  enabled: false

hostAliases: []

cronJob:
  concurrencyPolicy: Allow
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 3
  schedule: 0 * * * *
  backoffLimit: 6
